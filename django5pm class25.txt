modelform
---------
	modelform means our form is related to model

step1:
----
to create a project

	django-admin startproject proj21

step2:
-----
goto project location and create an application in that project location.

	cd proj21

	python manage.py startapp app21

step3:
------
to install our application in settings.py file of the project

	settings.py
	-----------
INSTALLED_APPS = [
    
    'app21'
]

step4:
-----
to create a templates and set the path for our templates in settings.py file of the project

	settings.py
	----------
TEMPLATES = [
    {
        
        'DIRS': [os.path.join(BASE_DIR,'templates')],
      },
]


step5:
-----
to create a model in models.py file of the application

	models.py
	---------
from django.db import models

# Create your models here.
class student(models.Model):
    sid=models.IntegerField(primary_key=True)
    sname=models.CharField(max_length=30)
    sadd=models.CharField(max_length=30)
    scontact=models.IntegerField()
    

step6:
-----
to check the errors in our model

	python manage.py check

step7:
------
to apply the make migrations

	python manage.py makemigrations

step8:
-----
to apply the migrate

	python manage.py migrate

step9:
-----
to create a model form in forms.py file of the application

	forms.py
	--------
from django import forms
from .models import student

class student_form(forms.ModelForm):
    class Meta:
        model=student
        fields="__all__"



step10:
------
to create a view in views.py file of the application
	
	views.py
	---------
from django.shortcuts import render
from .forms import student_form
from .models import student
from django.http import HttpResponse
# Create your views here.
def sinfo(request):
    if request.method=="POST":
        sobj=student_form(request.POST)
        if sobj.is_valid():
            sobj.save()
            return HttpResponse("inserted successfully")
    else:
        sobj=student_form()
        return render(request,'sinformation.html',{"std_obj":sobj})
    
def display(request):
    data=student.objects.all()
    return render(request,'output.html',{"records":data})
    
	sinformation.html
	-----------------
<!DOCTYPE html>
<html>
<body bgcolor="powderblue">
<form action="" method="post">
{% csrf_token %}
{{ std_obj.as_p }}
<input type="submit" value="add">
</form>
</body>
</html>

	output.html
	----------
<!DOCTYPE html>
<html>
<body>
<center>
<table border="2">
<tr><th>Sid</th>
    <th>Sname</th>
    <th>Sadd</th>
    <th>Scontact</th>
</tr>
{% for rec in records %}
<tr><td>{{ rec.sid }}</td>
    <td>{{ rec.sname }}</td>
    <td>{{ rec.sadd }}</td>
    <td>{{ rec.scontact }}</td>
</tr>
{% endfor %}
</table>
<center>
</body>
</html>

step11:
------
to configure the url patterns for views in urls.py file

	urls.py
	--------
from django.contrib import admin
from django.urls import path
from app21 import views

urlpatterns = [
    path('admin/', admin.site.urls),
    path('sin/',views.sinfo),
    path('sout/',views.display)
]

step12:
-------
to start the server

	python manage.py runserver

step13:
------
to send the request to the server

	http://127.0.0.1:8000/sin

	http://127.0.0.1:8000/sout

